"""–¢—É—Ç –Ω–∞—Ö–æ–¥—è—Ç—å—Å—è —Ä–æ—Ñ–ª—è–Ω —Ö–µ–Ω–¥–ª–µ—Ä—ã.
–ù–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –∏—Ö —Å–µ—Ä—å–µ–∑–Ω–æ. –ù–æ
—Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª–µ–∑–Ω—ã–µ, –¥–∞–∂–µ –æ—á–µ–Ω—å"""
import datetime
import re
from random import randint

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from data.permissions import set_user_ro_permissions
from loader import dp, db
from utils.misc import rate_limit
from utils.misc.random_num_generator import generate_num


@rate_limit(120, "gay")
@dp.message_handler(Command("gay", prefixes="!/"))
async def gay(message: types.Message):
    """–•–µ–¥–ª–µ—Ä, –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–º–∞–Ω–¥—ã /gay –∏–ª–∏ !gay
    –í –æ—Ç–≤–µ—Ç, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –≥–µ–µ–º

    –ü—Ä–∏–º–µ—Ä—ã:
        /gay
        /gay Vasya
        !gay
        !gay Vasya
    """
    # —Ä–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
    command_parse = re.compile(r"(!gay|/gay) ?([\w+ ]+)?")
    parsed = command_parse.match(message.text)
    target = parsed.group(2)
    percentage = randint(0, 100)

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤—ë–ª —Ü–µ–ª—å, –æ–Ω —Å–∞–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –µ—é
    if not target:
        target = message.from_user.get_mention()

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await message.reply(f"üè≥Ô∏è‚Äçüåà –ü–æ—Ö–æ–∂–µ, —á—Ç–æ {target} –≥–µ–π –Ω–∞ {percentage}%")


@rate_limit(120, "fun")
@dp.message_handler(Command("biba", prefixes="!/"))
async def biba(message: types.Message):
    """–•–µ–¥–ª–µ—Ä, –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–º–∞–Ω–¥—ã /biba –∏–ª–∏ !biba

    –í –æ—Ç–≤–µ—Ç, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä –±–∏–±—ã

    –ü—Ä–∏–º–µ—Ä—ã:
        /biba
        /biba 10
        /biba 1-10
        /biba 10-1
        !biba
        !biba 10
        !biba 1-10
        !biba 10-1
    """
    # —Ä–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
    command_parse = re.compile(r"(!biba|/biba) ?(-?\d*)?-?(\d+)?")
    parsed = command_parse.match(message.text)
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –±–∏–±—ã –æ—Ç 1 –¥–æ 30 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã)
    length = generate_num(parsed.group(2), parsed.group(3), 1, 30)

    # –µ—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –±—É–¥–µ–º –±–µ—Ä—è—Ç—å –±–∏–±—É –∞–≤—Ç–æ—Ä–∞ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    # –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –±–∏–±—É —Ç–æ–≥–æ, –∫—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–º–∞–Ω–¥—É
    if message.reply_to_message:
        target = message.reply_to_message.from_user.get_mention(as_html=True)
    else:
        target = message.from_user.get_mention(as_html=True)

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    await message.reply(f"ü§§ –£ {target} –±–∏–±–∞ {length} —Å–º")


@rate_limit(10, "fun")
@dp.message_handler(Command("roll", prefixes="!/"))
async def roll(message: types.Message):
    """–•–µ–¥–ª–µ—Ä, –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–º–∞–Ω–¥—ã /roll –∏–ª–∏ !roll

    –í –æ—Ç–≤–µ—Ç, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ

    –ü—Ä–∏–º–µ—Ä—ã:

        /roll
        /roll 10
        /roll 1-10
        /roll 10-1
        !roll
        !roll 10
        !roll 1-10
        !roll 10-1
    """
    # —Ä–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
    command_parse = re.compile(r"(!roll|/roll) ?(-?\d*)?-?(\d+)?")
    parsed = command_parse.match(message.text)
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–∏—Å–ª–æ
    num = generate_num(parsed.group(2), parsed.group(3))
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∏—Å–ª–æ
    await message.reply(f"–í–∞—à–µ —á–∏—Å–ª–æ: <b>{num}</b>")


@dp.message_handler(content_types=types.ContentType.STICKER)
async def delete_hamster(message: types.Message, state: FSMContext):
    sticker_sets = [set_name for (set_name,) in db.select_all_sets()]
    if message.sticker.set_name in sticker_sets:
        await message.delete()

        async with state.proxy() as data:
            if not data.get("Sticker Flood"):
                data["Sticker Flood"] = 1
            else:
                data["Sticker Flood"] += 1
                if data["Sticker Flood"] >= 3:
                    try:
                        await message.chat.restrict(user_id=message.from_user.id,
                                                    permissions=set_user_ro_permissions(),
                                                    until_date=datetime.datetime.now() + datetime.timedelta(
                                                        minutes=int(10))
                                                    )
                    except Exception as err:
                        pass
                    await message.answer(f"{message.from_user.get_mention(as_html=True)} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ 10 –º–∏–Ω "
                                         f"–∑–∞ –ø–ª–æ—Ö–∏–µ —Å—Ç–∏–∫–µ—Ä—ã.")
                    
                    data["Sticker Flood"] = 0
                    
                    # —è –æ–±–∏–¥–µ–ª—Å—è
                    
                    return
        await message.answer(f"{message.from_user.get_mention(as_html=True)}! –©–∞ –∑–∞–±–∞–Ω—é —Å—É–∫–∞.")
